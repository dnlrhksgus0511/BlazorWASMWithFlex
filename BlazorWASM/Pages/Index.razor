@page "/"
@inject IJSRuntime JSRuntime;


    <body>
        <div style="width: 100%;">
            <label>No Argument Return</label>
            <div class="btn-group" role="group">
                <button class="btn btn-primary" @onclick="GetReturnString" type="button">String Return</button>
                <button class="btn btn-primary" @onclick="GetReturnObject" type="button">Object Return</button>
            </div>
            <div style="width: 100%;">
                <textarea @bind="ReturnValue" style="width: 100%;height: 200px;"></textarea>
            </div>
        </div>
    </body>
    @code {
        private string ReturnValue { get; set; }
        private string Argument { get; set; }
        private string ArgumentReturnValue { get; set; }
        public class ReturnObject
        {
            public string key { get; set; }
        }

        private async Task GetReturnString()
        {
            ReturnValue = await JSRuntime.InvokeAsync<string>("returnString");
        }
        private async Task GetReturnObject()
        {
            var a = await GetJSFuc<string>("CallPromise");
        }

        private Task<T> GetJSFuc<T>(string funcNm, Array arguments = null)
        {
            var tcs = new TaskCompletionSource<T>();
            var promiseHandler = DotNetObjectReference.Create<PromiseHandler<T>>(new PromiseHandler<T>() { tcs = tcs });
            JSRuntime.InvokeAsync<object>(funcNm, promiseHandler);

            return tcs.Task;
        }



        //private Task<string> CallPromise()
        //{
        //    var tcs = new TaskCompletionSource<string>();
        //    var promiseHandler = DotNetObjectReference.Create<PromiseHandler>(new PromiseHandler() { tcs = tcs });
        //    JSRuntime.InvokeAsync<object>("CallPromise", promiseHandler);

        //    return tcs.Task;
        //}

        public class PromiseHandler<T>
        {
            public TaskCompletionSource<T> tcs { get; set; }

            [JSInvokable]
            public void SetResult(T json)
            {
                tcs.SetResult(json);
            }
        }

    }
